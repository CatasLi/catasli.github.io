{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[],"Cache":[{"_id":"source/_posts/Hello-Hexo.md","hash":"b8eeafbd44bb86e86f5026c668c301722b6c13af","modified":1547120146085},{"_id":"source/_posts/OpenCasCade-安装笔记.md","hash":"132f4cf3cbd21b3f0f4d94aa8bd56446fd8ea83b","modified":1547120146085},{"_id":"source/_posts/TensorFlow-安装笔记.md","hash":"2d24ac6d8e8c9e28e41ca3c35ff09229e777b088","modified":1547120146085},{"_id":"source/_posts/随笔其一.md","hash":"11edb2b8b1d202aa5be27dd9679e01d19e12a761","modified":1547120146086},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1547120146086},{"_id":"source/_posts/随笔其三.md","hash":"d84e45d9f166dd078156f0cfc152100f037e4417","modified":1547120146086},{"_id":"source/_posts/随笔其二.md","hash":"3fcfb630e8983fcaa19b790189d60c37a8d8b6f5","modified":1547120146086},{"_id":"public/content.json","hash":"f91c465aecd6f6ce3056f1c500b43d2f255ab208","modified":1547120682495},{"_id":"public/2019/01/10/hello-world/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682499},{"_id":"public/2018/05/27/随笔其三/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682499},{"_id":"public/2018/05/05/随笔其二/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682499},{"_id":"public/2018/05/05/TensorFlow-安装笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/2018/05/03/随笔其一/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/2018/04/27/OpenCasCade-安装笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/2018/04/25/Hello-Hexo/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/tags/笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/tags/随笔/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682500},{"_id":"public/archives/2018/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682501},{"_id":"public/archives/2018/04/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682501},{"_id":"public/archives/2018/05/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682501},{"_id":"public/archives/2019/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682501},{"_id":"public/archives/2019/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682501},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547120682501}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello Hexo!!","date":"2018-04-25T05:00:10.000Z","_content":"主要参考网址： https://www.cnblogs.com/fengxiongZz/p/7707219.html","source":"_posts/Hello-Hexo.md","raw":"---\ntitle: Hello Hexo!!\ndate: 2018-04-25 14:00:10\ntags: 笔记\n---\n主要参考网址： https://www.cnblogs.com/fengxiongZz/p/7707219.html","slug":"Hello-Hexo","published":1,"updated":"2019-01-10T11:35:46.085Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpijq0000caepbsqidc5k","content":"<p>主要参考网址： <a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>主要参考网址： <a href=\"https://www.cnblogs.com/fengxiongZz/p/7707219.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a></p>\n"},{"title":"OpenCasCade 安装笔记","date":"2018-04-27T01:02:46.000Z","_content":"## 环境安装\n### 1.配置基本库：\n 安装常用的开发编译工具包：\n ```bash\n sudo apt-get install build-essential \n sudo apt-get install automake autoconf \n ```\n 配置OpenGL库：\n ```bash\n sudo apt-get install freeglut3-dev \n ```\n \n### 2.配置第三方库（3rd-Party Libraries)\n 必需的库：Tcl/Tk, FreeType\n 可选库：TBB 3.x-4.x, gl2ps 1.3.5-1.3.8, FreeImage 3.14.1-3.15.4\n 命令：\n ```bash\n sudo apt-get install tcllib tklib tcl-dev tk-dev     \n ```\n 去下载Freestyle源码,解压后在目录打开终端，命令：\n ```bash\n ./configure\n make\n sudo make install  #这是一般编译第三方库通用的素质三连\n ```\n \n### 3.编译Opencascade库\n 首先你需要先下载库（这里是opencascade-7.2.0.tgz [百度网盘](https://yun.baidu.com/pcloud/album/info?uk=3808749571&album_id=1612598197766366243)）\n 解压到合适文件夹，打开终端，命令：\n ```bash\n mkdir build\n cd build\n cmake ../    #需要安装cmake\n make         #耐心地等待（估计1h的时间）\n sudo make install\n ```\n Tips:\n 为防止make语句执行到41%处报错无法找到“-lXmu\"和”-lXi\"，需要在终端进入/usr/lib/x86_64-linux-gnu目录，执行以下代码：\n ```bash\n sudo ln -s libXmu.so.6 libXmu.so\n sudo ln -s libXi.so.6 libXi.so\n ```\n 报错原因为在对应目录下找不到libXmu.so和libXi.so文件，其实这些文件存在只是默认命名加上了版本号（如“libXmu.6.1.0”,之前代码中给出的.6也是一个链接），我们在对应目录下生成指向文件的软链接（类似快捷方式）就可以解决报错。\n \n## 测试\n 至此环境安装结束，测试过程如发现文件权限问题导致打不开可以用chmod命令修改文件权限。\n### 打开igs文件\n 在build目录下打开终端，输入命令：\n```bash\n./draw.sh\npload ALL\nigesread file.igs igs\n1\n3\n0\nvdisplay Shape_1\nvfit             #将模型居中\nvsetdispmode 1   #默认为0只显示网格，1为显示模型材质<<实践经验\n```\n## 参考网址：\n https://www.cnblogs.com/opencascade/p/4003308.html\n http://www.cppblog.com/eryar/archive/2014/09/25/208421.html（网格）\n","source":"_posts/OpenCasCade-安装笔记.md","raw":"---\ntitle: OpenCasCade 安装笔记\ndate: 2018-04-27 10:02:46\ntags: 笔记\n---\n## 环境安装\n### 1.配置基本库：\n 安装常用的开发编译工具包：\n ```bash\n sudo apt-get install build-essential \n sudo apt-get install automake autoconf \n ```\n 配置OpenGL库：\n ```bash\n sudo apt-get install freeglut3-dev \n ```\n \n### 2.配置第三方库（3rd-Party Libraries)\n 必需的库：Tcl/Tk, FreeType\n 可选库：TBB 3.x-4.x, gl2ps 1.3.5-1.3.8, FreeImage 3.14.1-3.15.4\n 命令：\n ```bash\n sudo apt-get install tcllib tklib tcl-dev tk-dev     \n ```\n 去下载Freestyle源码,解压后在目录打开终端，命令：\n ```bash\n ./configure\n make\n sudo make install  #这是一般编译第三方库通用的素质三连\n ```\n \n### 3.编译Opencascade库\n 首先你需要先下载库（这里是opencascade-7.2.0.tgz [百度网盘](https://yun.baidu.com/pcloud/album/info?uk=3808749571&album_id=1612598197766366243)）\n 解压到合适文件夹，打开终端，命令：\n ```bash\n mkdir build\n cd build\n cmake ../    #需要安装cmake\n make         #耐心地等待（估计1h的时间）\n sudo make install\n ```\n Tips:\n 为防止make语句执行到41%处报错无法找到“-lXmu\"和”-lXi\"，需要在终端进入/usr/lib/x86_64-linux-gnu目录，执行以下代码：\n ```bash\n sudo ln -s libXmu.so.6 libXmu.so\n sudo ln -s libXi.so.6 libXi.so\n ```\n 报错原因为在对应目录下找不到libXmu.so和libXi.so文件，其实这些文件存在只是默认命名加上了版本号（如“libXmu.6.1.0”,之前代码中给出的.6也是一个链接），我们在对应目录下生成指向文件的软链接（类似快捷方式）就可以解决报错。\n \n## 测试\n 至此环境安装结束，测试过程如发现文件权限问题导致打不开可以用chmod命令修改文件权限。\n### 打开igs文件\n 在build目录下打开终端，输入命令：\n```bash\n./draw.sh\npload ALL\nigesread file.igs igs\n1\n3\n0\nvdisplay Shape_1\nvfit             #将模型居中\nvsetdispmode 1   #默认为0只显示网格，1为显示模型材质<<实践经验\n```\n## 参考网址：\n https://www.cnblogs.com/opencascade/p/4003308.html\n http://www.cppblog.com/eryar/archive/2014/09/25/208421.html（网格）\n","slug":"OpenCasCade-安装笔记","published":1,"updated":"2019-01-10T11:35:46.085Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpijv0001caepr4l2p19w","content":"<h2 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h2><h3 id=\"1-配置基本库：\"><a href=\"#1-配置基本库：\" class=\"headerlink\" title=\"1.配置基本库：\"></a>1.配置基本库：</h3><p> 安装常用的开发编译工具包：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential </span><br><span class=\"line\">sudo apt-get install automake autoconf</span><br></pre></td></tr></table></figure></p>\n<p> 配置OpenGL库：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install freeglut3-dev</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-配置第三方库（3rd-Party-Libraries\"><a href=\"#2-配置第三方库（3rd-Party-Libraries\" class=\"headerlink\" title=\"2.配置第三方库（3rd-Party Libraries)\"></a>2.配置第三方库（3rd-Party Libraries)</h3><p> 必需的库：Tcl/Tk, FreeType<br> 可选库：TBB 3.x-4.x, gl2ps 1.3.5-1.3.8, FreeImage 3.14.1-3.15.4<br> 命令：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install tcllib tklib tcl-dev tk-dev</span><br></pre></td></tr></table></figure></p>\n<p> 去下载Freestyle源码,解压后在目录打开终端，命令：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install  <span class=\"comment\">#这是一般编译第三方库通用的素质三连</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-编译Opencascade库\"><a href=\"#3-编译Opencascade库\" class=\"headerlink\" title=\"3.编译Opencascade库\"></a>3.编译Opencascade库</h3><p> 首先你需要先下载库（这里是opencascade-7.2.0.tgz <a href=\"https://yun.baidu.com/pcloud/album/info?uk=3808749571&amp;album_id=1612598197766366243\" target=\"_blank\" rel=\"noopener\">百度网盘</a>）<br> 解压到合适文件夹，打开终端，命令：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">cmake ../    <span class=\"comment\">#需要安装cmake</span></span><br><span class=\"line\">make         <span class=\"comment\">#耐心地等待（估计1h的时间）</span></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure></p>\n<p> Tips:<br> 为防止make语句执行到41%处报错无法找到“-lXmu”和”-lXi”，需要在终端进入/usr/lib/x86_64-linux-gnu目录，执行以下代码：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s libXmu.so.6 libXmu.so</span><br><span class=\"line\">sudo ln -s libXi.so.6 libXi.so</span><br></pre></td></tr></table></figure></p>\n<p> 报错原因为在对应目录下找不到libXmu.so和libXi.so文件，其实这些文件存在只是默认命名加上了版本号（如“libXmu.6.1.0”,之前代码中给出的.6也是一个链接），我们在对应目录下生成指向文件的软链接（类似快捷方式）就可以解决报错。</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p> 至此环境安装结束，测试过程如发现文件权限问题导致打不开可以用chmod命令修改文件权限。</p>\n<h3 id=\"打开igs文件\"><a href=\"#打开igs文件\" class=\"headerlink\" title=\"打开igs文件\"></a>打开igs文件</h3><p> 在build目录下打开终端，输入命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./draw.sh</span><br><span class=\"line\">pload ALL</span><br><span class=\"line\">igesread file.igs igs</span><br><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">0</span><br><span class=\"line\">vdisplay Shape_1</span><br><span class=\"line\">vfit             <span class=\"comment\">#将模型居中</span></span><br><span class=\"line\">vsetdispmode 1   <span class=\"comment\">#默认为0只显示网格，1为显示模型材质&lt;&lt;实践经验</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考网址：\"><a href=\"#参考网址：\" class=\"headerlink\" title=\"参考网址：\"></a>参考网址：</h2><p> <a href=\"https://www.cnblogs.com/opencascade/p/4003308.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/opencascade/p/4003308.html</a><br> <a href=\"http://www.cppblog.com/eryar/archive/2014/09/25/208421.html（网格）\" target=\"_blank\" rel=\"noopener\">http://www.cppblog.com/eryar/archive/2014/09/25/208421.html（网格）</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h2><h3 id=\"1-配置基本库：\"><a href=\"#1-配置基本库：\" class=\"headerlink\" title=\"1.配置基本库：\"></a>1.配置基本库：</h3><p> 安装常用的开发编译工具包：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential </span><br><span class=\"line\">sudo apt-get install automake autoconf</span><br></pre></td></tr></table></figure></p>\n<p> 配置OpenGL库：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install freeglut3-dev</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-配置第三方库（3rd-Party-Libraries\"><a href=\"#2-配置第三方库（3rd-Party-Libraries\" class=\"headerlink\" title=\"2.配置第三方库（3rd-Party Libraries)\"></a>2.配置第三方库（3rd-Party Libraries)</h3><p> 必需的库：Tcl/Tk, FreeType<br> 可选库：TBB 3.x-4.x, gl2ps 1.3.5-1.3.8, FreeImage 3.14.1-3.15.4<br> 命令：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install tcllib tklib tcl-dev tk-dev</span><br></pre></td></tr></table></figure></p>\n<p> 去下载Freestyle源码,解压后在目录打开终端，命令：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install  <span class=\"comment\">#这是一般编译第三方库通用的素质三连</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-编译Opencascade库\"><a href=\"#3-编译Opencascade库\" class=\"headerlink\" title=\"3.编译Opencascade库\"></a>3.编译Opencascade库</h3><p> 首先你需要先下载库（这里是opencascade-7.2.0.tgz <a href=\"https://yun.baidu.com/pcloud/album/info?uk=3808749571&amp;album_id=1612598197766366243\" target=\"_blank\" rel=\"noopener\">百度网盘</a>）<br> 解压到合适文件夹，打开终端，命令：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">cmake ../    <span class=\"comment\">#需要安装cmake</span></span><br><span class=\"line\">make         <span class=\"comment\">#耐心地等待（估计1h的时间）</span></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure></p>\n<p> Tips:<br> 为防止make语句执行到41%处报错无法找到“-lXmu”和”-lXi”，需要在终端进入/usr/lib/x86_64-linux-gnu目录，执行以下代码：<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s libXmu.so.6 libXmu.so</span><br><span class=\"line\">sudo ln -s libXi.so.6 libXi.so</span><br></pre></td></tr></table></figure></p>\n<p> 报错原因为在对应目录下找不到libXmu.so和libXi.so文件，其实这些文件存在只是默认命名加上了版本号（如“libXmu.6.1.0”,之前代码中给出的.6也是一个链接），我们在对应目录下生成指向文件的软链接（类似快捷方式）就可以解决报错。</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p> 至此环境安装结束，测试过程如发现文件权限问题导致打不开可以用chmod命令修改文件权限。</p>\n<h3 id=\"打开igs文件\"><a href=\"#打开igs文件\" class=\"headerlink\" title=\"打开igs文件\"></a>打开igs文件</h3><p> 在build目录下打开终端，输入命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./draw.sh</span><br><span class=\"line\">pload ALL</span><br><span class=\"line\">igesread file.igs igs</span><br><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">0</span><br><span class=\"line\">vdisplay Shape_1</span><br><span class=\"line\">vfit             <span class=\"comment\">#将模型居中</span></span><br><span class=\"line\">vsetdispmode 1   <span class=\"comment\">#默认为0只显示网格，1为显示模型材质&lt;&lt;实践经验</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"参考网址：\"><a href=\"#参考网址：\" class=\"headerlink\" title=\"参考网址：\"></a>参考网址：</h2><p> <a href=\"https://www.cnblogs.com/opencascade/p/4003308.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/opencascade/p/4003308.html</a><br> <a href=\"http://www.cppblog.com/eryar/archive/2014/09/25/208421.html（网格）\" target=\"_blank\" rel=\"noopener\">http://www.cppblog.com/eryar/archive/2014/09/25/208421.html（网格）</a></p>\n"},{"title":"随笔其一","date":"2018-05-03T05:23:56.000Z","_content":"```bash\necho \"Hello World!\"\n```\n你好，世界","source":"_posts/随笔其一.md","raw":"---\ntitle: 随笔其一\ndate: 2018-05-03 14:23:56\ntags: 随笔\n---\n```bash\necho \"Hello World!\"\n```\n你好，世界","slug":"随笔其一","published":1,"updated":"2019-01-10T11:35:46.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpijz0003caep77xwpk7j","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World!\"</span></span><br></pre></td></tr></table></figure>\n<p>你好，世界</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World!\"</span></span><br></pre></td></tr></table></figure>\n<p>你好，世界</p>\n"},{"title":"TensorFlow 安装笔记","date":"2018-05-05T02:53:47.000Z","_content":"## 环境\n\n* Ubuntu16.04\n* Python2.7.12\n\n## 主要命令\n```bash\n$ sudo apt-get install python-pip python-dev\n$ sudo pip install tensorflow #会自动安装依赖包\n```\n附上test.py测试用的代码：\n```python\nimport tensorflow as tf\n\nhello=tf.constant(\"Hello TensorFlow!\")\nsess=tf.Session()\nprint sess.run(hello)\n```\n附上Pycharm安装命令：\n首先添加源\n```bash\n$ sudo add-apt-repository ppa:mystic-mirage/pycharm\n```\n然后根据需求安装正式版（收费需激活）或者社区版（免费）\n```bash\n$ sudo apt update\n$ sudo apt install pycharm #社区版为pycharm-community\n```\n## Tips:\n程序运行时可能会出现“Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA”类似的提示（I），意思为当前CPU支持AVX（Advanced Vector Extensions），运算速度还可以提升，所以可以开启更好更快的模式，但是你现在用的模式相对来说可能不是那么快，所以这个其实并不是存在错误，所以如果不嫌当前的模式慢就忽略掉这个警告就好了。 [参考网址](https://blog.csdn.net/CliuGeek/article/details/78836598)\n强迫症解决方案：\n在程序前加上：\n```pyhton\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n```\n这样可以关闭提示。\n","source":"_posts/TensorFlow-安装笔记.md","raw":"---\ntitle: TensorFlow 安装笔记\ndate: 2018-05-05 11:53:47\ntags: 笔记\n---\n## 环境\n\n* Ubuntu16.04\n* Python2.7.12\n\n## 主要命令\n```bash\n$ sudo apt-get install python-pip python-dev\n$ sudo pip install tensorflow #会自动安装依赖包\n```\n附上test.py测试用的代码：\n```python\nimport tensorflow as tf\n\nhello=tf.constant(\"Hello TensorFlow!\")\nsess=tf.Session()\nprint sess.run(hello)\n```\n附上Pycharm安装命令：\n首先添加源\n```bash\n$ sudo add-apt-repository ppa:mystic-mirage/pycharm\n```\n然后根据需求安装正式版（收费需激活）或者社区版（免费）\n```bash\n$ sudo apt update\n$ sudo apt install pycharm #社区版为pycharm-community\n```\n## Tips:\n程序运行时可能会出现“Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA”类似的提示（I），意思为当前CPU支持AVX（Advanced Vector Extensions），运算速度还可以提升，所以可以开启更好更快的模式，但是你现在用的模式相对来说可能不是那么快，所以这个其实并不是存在错误，所以如果不嫌当前的模式慢就忽略掉这个警告就好了。 [参考网址](https://blog.csdn.net/CliuGeek/article/details/78836598)\n强迫症解决方案：\n在程序前加上：\n```pyhton\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\n```\n这样可以关闭提示。\n","slug":"TensorFlow-安装笔记","published":1,"updated":"2019-01-10T11:35:46.085Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpik00004caeputqnawjq","content":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ul>\n<li>Ubuntu16.04</li>\n<li>Python2.7.12</li>\n</ul>\n<h2 id=\"主要命令\"><a href=\"#主要命令\" class=\"headerlink\" title=\"主要命令\"></a>主要命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install python-pip python-dev</span><br><span class=\"line\">$ sudo pip install tensorflow <span class=\"comment\">#会自动安装依赖包</span></span><br></pre></td></tr></table></figure>\n<p>附上test.py测试用的代码：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"></span><br><span class=\"line\">hello=tf.constant(<span class=\"string\">\"Hello TensorFlow!\"</span>)</span><br><span class=\"line\">sess=tf.Session()</span><br><span class=\"line\"><span class=\"keyword\">print</span> sess.run(hello)</span><br></pre></td></tr></table></figure></p>\n<p>附上Pycharm安装命令：<br>首先添加源<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:mystic-mirage/pycharm</span><br></pre></td></tr></table></figure></p>\n<p>然后根据需求安装正式版（收费需激活）或者社区版（免费）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install pycharm <span class=\"comment\">#社区版为pycharm-community</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips:\"></a>Tips:</h2><p>程序运行时可能会出现“Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA”类似的提示（I），意思为当前CPU支持AVX（Advanced Vector Extensions），运算速度还可以提升，所以可以开启更好更快的模式，但是你现在用的模式相对来说可能不是那么快，所以这个其实并不是存在错误，所以如果不嫌当前的模式慢就忽略掉这个警告就好了。 <a href=\"https://blog.csdn.net/CliuGeek/article/details/78836598\" target=\"_blank\" rel=\"noopener\">参考网址</a><br>强迫症解决方案：<br>在程序前加上：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">os.environ[&apos;TF_CPP_MIN_LOG_LEVEL&apos;] = &apos;2&apos;</span><br></pre></td></tr></table></figure></p>\n<p>这样可以关闭提示。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ul>\n<li>Ubuntu16.04</li>\n<li>Python2.7.12</li>\n</ul>\n<h2 id=\"主要命令\"><a href=\"#主要命令\" class=\"headerlink\" title=\"主要命令\"></a>主要命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install python-pip python-dev</span><br><span class=\"line\">$ sudo pip install tensorflow <span class=\"comment\">#会自动安装依赖包</span></span><br></pre></td></tr></table></figure>\n<p>附上test.py测试用的代码：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"></span><br><span class=\"line\">hello=tf.constant(<span class=\"string\">\"Hello TensorFlow!\"</span>)</span><br><span class=\"line\">sess=tf.Session()</span><br><span class=\"line\"><span class=\"keyword\">print</span> sess.run(hello)</span><br></pre></td></tr></table></figure></p>\n<p>附上Pycharm安装命令：<br>首先添加源<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:mystic-mirage/pycharm</span><br></pre></td></tr></table></figure></p>\n<p>然后根据需求安装正式版（收费需激活）或者社区版（免费）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install pycharm <span class=\"comment\">#社区版为pycharm-community</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips:\"></a>Tips:</h2><p>程序运行时可能会出现“Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA”类似的提示（I），意思为当前CPU支持AVX（Advanced Vector Extensions），运算速度还可以提升，所以可以开启更好更快的模式，但是你现在用的模式相对来说可能不是那么快，所以这个其实并不是存在错误，所以如果不嫌当前的模式慢就忽略掉这个警告就好了。 <a href=\"https://blog.csdn.net/CliuGeek/article/details/78836598\" target=\"_blank\" rel=\"noopener\">参考网址</a><br>强迫症解决方案：<br>在程序前加上：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">os.environ[&apos;TF_CPP_MIN_LOG_LEVEL&apos;] = &apos;2&apos;</span><br></pre></td></tr></table></figure></p>\n<p>这样可以关闭提示。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-10T11:35:46.086Z","updated":"2019-01-10T11:35:46.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpik4000bcaepf9narn66","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"随笔其三","date":"2018-05-27T07:05:19.000Z","_content":"## この先の困難に負けずに頑張れー\nBY　夜露死苦","source":"_posts/随笔其三.md","raw":"---\ntitle: 随笔其三\ndate: 2018-05-27 16:05:19\ntags: 随笔\n---\n## この先の困難に負けずに頑張れー\nBY　夜露死苦","slug":"随笔其三","published":1,"updated":"2019-01-10T11:35:46.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpik5000ccaep485ezckb","content":"<h2 id=\"この先の困難に負けずに頑張れー\"><a href=\"#この先の困難に負けずに頑張れー\" class=\"headerlink\" title=\"この先の困難に負けずに頑張れー\"></a>この先の困難に負けずに頑張れー</h2><p>BY　夜露死苦</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"この先の困難に負けずに頑張れー\"><a href=\"#この先の困難に負けずに頑張れー\" class=\"headerlink\" title=\"この先の困難に負けずに頑張れー\"></a>この先の困難に負けずに頑張れー</h2><p>BY　夜露死苦</p>\n"},{"title":"随笔其二","date":"2018-05-05T06:02:02.000Z","_content":"##  「遠く離れていても、愛する人はずっとあなたを見守っている。」\nヴァイオレット.エヴァーガーデンより","source":"_posts/随笔其二.md","raw":"---\ntitle: 随笔其二\ndate: 2018-05-05 15:02:02\ntags: 随笔\n---\n##  「遠く離れていても、愛する人はずっとあなたを見守っている。」\nヴァイオレット.エヴァーガーデンより","slug":"随笔其二","published":1,"updated":"2019-01-10T11:35:46.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqqjpik6000dcaepahjgbicl","content":"<h2 id=\"「遠く離れていても、愛する人はずっとあなたを見守っている。」\"><a href=\"#「遠く離れていても、愛する人はずっとあなたを見守っている。」\" class=\"headerlink\" title=\"「遠く離れていても、愛する人はずっとあなたを見守っている。」\"></a>「遠く離れていても、愛する人はずっとあなたを見守っている。」</h2><p>ヴァイオレット.エヴァーガーデンより</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"「遠く離れていても、愛する人はずっとあなたを見守っている。」\"><a href=\"#「遠く離れていても、愛する人はずっとあなたを見守っている。」\" class=\"headerlink\" title=\"「遠く離れていても、愛する人はずっとあなたを見守っている。」\"></a>「遠く離れていても、愛する人はずっとあなたを見守っている。」</h2><p>ヴァイオレット.エヴァーガーデンより</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjqqjpik00004caeputqnawjq","tag_id":"cjqqjpijx0002caepwy0kgri1","_id":"cjqqjpik20006caepzj92q3b4"},{"post_id":"cjqqjpijq0000caepbsqidc5k","tag_id":"cjqqjpijx0002caepwy0kgri1","_id":"cjqqjpik20007caep9dd05gu5"},{"post_id":"cjqqjpijv0001caepr4l2p19w","tag_id":"cjqqjpijx0002caepwy0kgri1","_id":"cjqqjpik30009caepbbgwer3m"},{"post_id":"cjqqjpijz0003caep77xwpk7j","tag_id":"cjqqjpik20008caep4r8aofc1","_id":"cjqqjpik3000acaepmxzzta46"},{"post_id":"cjqqjpik5000ccaep485ezckb","tag_id":"cjqqjpik20008caep4r8aofc1","_id":"cjqqjpik7000ecaepv9to8540"},{"post_id":"cjqqjpik6000dcaepahjgbicl","tag_id":"cjqqjpik20008caep4r8aofc1","_id":"cjqqjpik7000fcaepmq98bzvp"}],"Tag":[{"name":"笔记","_id":"cjqqjpijx0002caepwy0kgri1"},{"name":"随笔","_id":"cjqqjpik20008caep4r8aofc1"}]}}